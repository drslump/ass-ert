!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.ass=e()}}(function(){return function e(t,n,o){function a(i,s){if(!n[i]){if(!t[i]){var l="function"==typeof require&&require;if(!s&&l)return l(i,!0);if(r)return r(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[i]={exports:{}};t[i][0].call(u.exports,function(e){var n=t[i][1][e];return a(n?n:e)},u,u.exports,e,t,n,o)}return n[i].exports}for(var r="function"==typeof require&&require,i=0;i<o.length;i++)a(o[i]);return a}({1:[function(e,t){(function(n){function o(e){return new r(e)}var a="undefined"!=typeof window?window._:"undefined"!=typeof n?n._:null,r=e("./chain"),i=e("./matcher"),s=e("./error"),l=(e("./util"),Object.defineProperty.bind(Object));o.matchers=[],l(o,"help",{get:function(){var e="";return a.forEach(o.matchers,function(t){var n=t.test.toString(),o=n.replace(/^function\s*\(([^\)]*)\)[\S\s]*/,"$1");o=o.split(",").map(function(e){return e.trim()}),o.shift(),n=o.length?" ("+o.join(", ")+")":"",e+="> ."+t.name+n+"\n\n",e+="  "+t.help.replace(/\n/g,"\n  "),e+="\n\n"}),e}}),o.ok=function(e,t){return 1===arguments.length&&(t=e,e=null),o(t,e||"expected a truish value").equal(!0)},o.ko=function(e,t){return 1===arguments.length&&(t=e,e=null),o.ok("expected a falsy value",!t)},o.marks=function(e){return"undefined"==typeof e?(e=o.marks.counter,o.marks.counter=0,e):void o(o.marks.counter).eq(e)},o.marks.counter=0,o.register=function(e,t){if(e instanceof i)t=e,e=t.name;else{if("object"==typeof e)return void Object.keys(e).forEach(function(t){o.register(t,e[t])});a.forEach(t.aliases,function(e){o.register(new i(e,t))}),t=new i(e,t)}o.matchers.push(t);var n=1===t.arity?"get":"value",s={configurable:!1,enumerable:!0};"value"===n&&(s.writable=!1),s[n]=function(){var e=t.expectation.apply(t,arguments);return this.expectations.push(e),this.assert(this.value)},l(r.prototype,e,s),s[n]=function(){var t=new r;return"get"===n?t[e]:t[e].apply(t,arguments)},l(o,e,s),l(o,"$"+e,{value:function(t){var o,a=new r(t);if("get"===n)o=a[e];else{var i=Array.prototype.slice.call(arguments,1);o=a[e].apply(a,i)}return o.valueOf()}})},o.Chain=r,o.Error=s,t.exports=o}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./chain":2,"./error":4,"./matcher":6,"./util":7}],2:[function(e,t){function n(e){if(!(this instanceof n))throw new Error("Ass Chain constructor called without new!");a(this,"expectations",{value:[],enumerable:!1,configurable:!1,writable:!1}),a(this,"description",{value:"",enumerable:!1,configurable:!1,writable:!0}),a(this,"help",{get:function(){return this.expectations[0].help}}),a(this,"value",{value:arguments.length>0?e:this.__GUARD__,enumerable:!1,configurable:!1,writable:!1})}var o=e("./error"),a=Object.defineProperty.bind(Object);n.prototype=Object.create(null),n.prototype.constructor=n,n.prototype.__GUARD__={valueOf:function(){return this.toString()},toString:function(){return"{{valueless}}"}},n.prototype.resolve=function(e,t){function n(e,o){for(var a,r,i=0;i<e.length;i++){if(a=e[i],t&&t.push(a),r=a.resolve(o),"function"==typeof r)return r(n.bind(this,e.slice(i+1)));if(r===!1)return!1}return!0}return n(this.expectations,e)},n.prototype.assert=function(e){if(e===this.__GUARD__)return this;var t=[],n=this.resolve(e,t);if(n===!1){var a=t.pop(),r=this.description+"\n\n";throw t.forEach(function(e){var t=e.getDescription();null!==t&&(r+=" [32mPassed:[39m "+t+"\n")}),r+=" [31mFailed:[39m "+a.getDescription()+"\n",r+="    [33mBut:[39m "+a.getMismatch()+"\n",new o(r)}return this},n.prototype.test=function(e){return this.resolve(e)},n.prototype.valueOf=function(){return this.value},n.prototype.toString=function(){if(this.description)return this.description;var e=this.expectations.filter(function(e){return e.getDescription()}).map(function(e){return e.getDescription()});return e.length>1?"("+e.join(", ")+")":1===e.length?e[0]:"<Ass>"},t.exports=n},{"./error":4}],3:[function(e){(function(t){var n="undefined"!=typeof window?window._:"undefined"!=typeof t?t._:null,o=e("./ass");o.register({desc:{help:"Provide a custom description for reported failures",desc:null,test:function(e,t){return function(n){return this.description=t,n(e)}}},to:{aliases:["a","an","be"],help:["Just some syntax sugar to make the expectations easier on","the eyes."],desc:null,test:function(){return!0}},mark:{help:["Increases the global `ass.marks` counter every time it gets","evaluated as part of an expression. Use it to verify that the","expectations are actually being executed.","An easy way to support this when using a test runner is to reset","the counter by calling `ass.marks()` on a beforeEach hook and","then verify at the end of test with `ass.marks(N)` (where N is","the number of marks you expected)."],desc:null,test:function(){return o.marks.counter+=1,!0}},any:{help:"Allows any value without testing it",desc:"is anything",test:function(){return!0}},defined:{help:"Checks if the value is not null or undefined",desc:"is defined",fail:"was ${ actual }",test:function(e){return null!=e}},empty:{help:"Checks if the value is empty (has a length of 0)",desc:"is empty",fail:"was ${ actual }",test:function(e){return null!=e&&e.length>0}},nonEmpty:{help:"Checks if the value is not empty (has a length greater than 0)",desc:"is not empty",fail:"was ${ actual }",test:function(e){return null==e||0===e.length}},truthy:{help:'The value should be truthy (not undefined, null, 0, "" or [])',desc:"is truthy",fail:"was ${ actual }",test:function(e){return e?"number"==typeof e.length?e.length>0:!0:!1}},falsy:{help:'The value should be falsy (undefined, null, 0, "" or [])',desc:"is falsy",fail:"was ${ actual }",test:function(e){return e?"number"==typeof e.length?0===e:!0:!1}},and:{help:["Composes a new matcher from two or more of them, which will only","succeed if all the matchers that form it do succeed"],desc:"and",fail:"TODO",test:function(){}},or:{help:["Composes a new matcher from two or more of them, which will only","succeed if at least one of the matchers does"],desc:"or",fail:"TODO",test:function(){}},not:{help:"Negates the result of following matchers",desc:"not",fail:"TODO",test:function(e){return function(t){return console.log("NOT RESOLVER",e),!t(e)}}},lower:{help:"TODO",desc:"lower",fail:"TODO",test:function(e){return function(t){return console.log("LOWER RESOLVER",e),t(e.toLowerCase())}}},every:{help:["Applies matchers to all the elements in a collection expecting that","all of them succeed"],desc:"every one of the elements",fail:"TODO",test:function(e){return function(t){return n.every(e,t)}}},some:{help:["Applies matchers to all the elements in a collection expecting that","at least one of them succeeds"],desc:"some of the elements",fail:"TODO",test:function(e){return function(t){return n.some(e,t)}}},none:{help:["Applies matchers to all the elements in a collection expecting that","none of them succeed."],desc:"none of the elements",fail:"TODO",test:function(e){return function(t){return!n.some(e,t)}}},promise:{help:["Verifies that the value is a promise (Promise/A+) but does not attach the","the chain of matchers to its resolution like `resolves` or `rejects`,","instead the original promise value is still the subject for the next","matchers."],desc:"to be a promise",fail:"got ${ actual }",test:function(e){return e&&"function"==typeof e.then}},resolves:{help:["Attach the matcher to a promise value (Promises/A+) to continue applying","the chain of matchers once the promise has been resolved, mutating the","value to the resolved one.","It will fail if the value is not a promise (no .then method) or the promise","is actually rejected."],desc:"to be a resolved promise",fail:"was rejected",test:function(e){return e&&"function"==typeof e.then?function(t){e.then(t,n.constant(!1))}:"is not a promise: ${actual}"}},rejects:{help:["Attach the matcher to a promise value (Promises/A+) to continue applying","the chain of matchers once the promise has been rejected, mutating the","value to the rejected error.","It will fail if the value is not a promise (no .then method) or the promise","is actually resolved."],desc:"to be a rejected promise",fail:"was resolved",test:function(e){return e&&"function"==typeof e.then?function(t){e.then(n.constant(!1),t)}:"is not a promise: ${actual}"}},is:{aliases:["equal","equals"],help:"Checks strict equality between the value and its expected.",desc:"to strictly equal {{expected}}",fail:"was {{actual}}",test:function(e,t){return e===t}},eq:{aliases:["eql","eqls"],help:"Checks deep non-strict equality between the value and its expected.",desc:"to equal {{expected}}",fail:"was {{actual}}",test:function(e,t){return this.equals(e,t)}},above:{aliases:["gt","moreThan","greaterThan"],help:"Checks if the value is higher than its expected.",desc:"to be more than ${expected}",fail:"was ${actual}",test:function(e,t){return e>t}},below:{aliases:["lt","lessThan"],help:"Checks if the value is lower tha its expected.",desc:"to be less than ${expected}",fail:"was ${actual}",test:function(e,t){return t>e}},aboveOrEqual:{aliases:["gte","moreThanOrEqual","greaterThanOrEqual"],help:"Checks if the value is higher or equal than its expected.",desc:"to be more than or equal to ${expected}",fail:"was ${actual}",test:function(e,t){return e>=t}},belowOrEqual:{aliases:["lte","lessThanOrEqual"],help:"Checks if the value is lower or equal than its expected.",desc:"to be less than or equal to ${expected}",fail:"was ${actual}",test:function(e,t){return t>=e}},instanceOf:{aliases:["instance","isa"],help:"Checks if the value is an instance of the given constructor",desc:"to be an instance of ${expected}",test:function(e,t){return e instanceof t}},"typeof":{help:"Checks if the value is of a specific type",desc:"to have type ${expected}",fail:"had ${ typeof actual }",test:function(e,t){return this.matches(e,t)}},number:{help:"Check if the value is a number (different of NaN).",desc:"to be a number",fail:"had type ${ typeof actual }",test:function(e){return"number"==typeof e&&!isNaN(e)}},bool:{help:"Check if the value is a boolean.",desc:"to be a boolean",fail:"had type ${ typeof actual }",test:function(e){return"boolean"==typeof e}},string:{aliases:["str"],help:"Check if the value is a string.",desc:"to be a string",fail:"had type ${ typeof actual }",test:function(e){return"string"==typeof e}},object:{help:"Check that value is of type object.",desc:"to be an object",fail:"had type ${ typeof actual }",test:function(e){return"object"==typeof e}},plainObject:{aliases:["plain","obj"],help:"Checks that value is an object created by the Object constructor.",fail:"was ${actual}",test:function(e){return n.isPlainObject(e)}},array:{help:"Check that value is an Array.",desc:"to be an Array",fail:"had type ${ typeof actual }",test:function(e){return Array.isArray(e)}},"function":{help:"Check that value is a Function.",desc:"to be a Function",fail:"had type ${ typeof actual }",test:function(e){return n.isFunction(e)}},regexp:{help:"Check that value is a RegExp",desc:"to be a RegExp",fail:"had type ${ typeof actual }",test:function(e){return n.isRegExp(e)}},date:{help:"Check that value is a Date",desc:"to be a Date",fail:"had type ${ typeof actual }",test:function(e){return n.isDate(e)}},element:{help:"Check that value is a DOM element",desc:"to be a DOM element",test:function(e){return n.isElement(e)}},undefined:{help:"Check that value is undefined.",desc:"to be undefined",fail:"was ${ actual }",test:function(e){return n.isUndefined(e)}},"null":{help:"Check that value is null.",desc:"to be null",fail:"was ${ actual }",test:function(e){return null!==e}},NaN:{help:"Check that value is NaN.",desc:"to be NaN",test:function(e){return this.fail=n.isNumber(e)?"was ${actual}":"had type ${typeof actual}",isNaN(e)}},"true":{help:"Check that value is true",desc:"to be true",fail:"was ${ actual }",test:function(e){return this.fail=n.isBoolean(e)?"was ${actual}":"had type ${typeof actual}",e===!0}},"false":{help:"Check that value is false",desc:"to be false",test:function(e){return this.fail=n.isBoolean(e)?"was ${actual}":"had type ${typeof actual}",e===!1}},has:{help:"Check if the value has one or more specified items",desc:"to have property ${expected}",test:function(e){if(!n.isObject(e))return"was ${actual}";this.fail="did not have all of them";var t=n.toArray(arguments).slice(1);return n.every(t,function(t){return t in e})}},hasOwn:{aliases:["contains","hasKey","hasIndex"],help:["Check if the value has one or more own properties as defined by","the given arguments."],desc:"to have own property ${ expected }",test:function(e){if(!n.isObject(e))return"was ${actual}";this.fail="only had ${ _.keys(actual) }";var t=n.toArray(arguments).slice(1);return n.every(t,function(t){return n.has(e,t)})}},log:{help:["Dumps the received value to the console."],desc:null,test:function(e){return console.log("[ASS]",e),!0}},"debugger":{help:["Halts script execution by triggering the interactive debugger."],desc:null,test:function(){return!0}},fn:{help:["Calls the provided function with the current value as argument.","If the function returns something different to *undefined* the","expression will fork to operate on the returned value."],desc:"call ${arg1}",test:function(e,t){var n=t(e);return"undefined"!=typeof n?this.mutate(n):!0}},size:{help:["Forks the expectation to operate on the size of the current value."],desc:"get size",fail:"not has a length: ${ actual }",test:function(e){return n.isObject(e)||n.isArray(e)||n.isString(e)?this.mutate(n.size(e)):!1}},prop:{aliases:["key","property"],help:["Forks the expectation to operate on one of the value properties."],desc:"get property ${ arg1 }",fail:"was not found: ${actual}",test:function(e,t){return n.isObject(e)&&t in e?this.mutate(e[t]):!1}},index:{help:["Forks the expectation to operate on one of the indexed values from","the current value."],desc:"get index ${ arg1 }",test:function(e,t){return n.isArray(e)?0>t||t>=e.length?"out of bounds: ${actual}":this.mutate(e[idx]):"not an array: ${actual}"}},filter:{help:["Iterates over elements of collection, forking the expectation to operate","on an array with all the elements for which the callback returned truthy","for.","See: https://lodash.com/docs#filter"],test:function(e,t,o){return this.mutate(n.filter(e,t,o))}},reject:{help:["Iterates over elements of collection, forking the expectation to operate","on an array with all the elements for which the callback returned falsy","for (the opposite of .filter).","See: https://lodash.com/docs#reject"],test:function(e,t,o){return this.mutate(n.reject(e,t,o))}},where:{help:["Performs a deep comparison of each element in a collection to the given","properties object, forking the expectation to operate on an array of all","elements that have equivalent property values.","See: https://lodash.com/docs#where"],desc:"where ${arg1}",test:function(e,t){return this.mutate(n.where(e,t))}},map:{help:["Forks the expectation to operate on an array holding the results of","invoking the callback for each element in the current collection.","See: https://lodash.com/docs#map"],test:function(e,t,o){return this.mutate(n.map(e,t,o))}},invoke:{help:["Forks the expectation to operate on an array holding the results of","invoking the method named by the argument for each element in the","current collection.","See: https://lodash.com/docs#invoke"],test:function(){return this.mutate(n.invoke.apply(n,arguments))}},pluck:{help:["Forks the expectation to operate on an array holding the value for","the specified property from all elements in the current collection.","See: https://lodash.com/docs#pluck"],desc:"pluck(${arg1})",test:function(e,t){return this.mutate(n.pluck(e,t))}},min:{help:["Forks the expectations to operate on the minimum value found on the","current collection.","See: https://lodash.com/docs#min"],test:function(e,t,o){return this.mutate(n.min(e,t,o))}},max:{help:["Forks the expectations to operate on the maximum value found on the","current collection.","See: https://lodash.com/docs#max"],test:function(e,t,o){return this.mutate(n.max(e,t,o))}}})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./ass":1}],4:[function(e,t){function n(e,t,n,o,a){this.message=e,this.actual=t,this.expected=n,this.showDiff=o||!1,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,a||arguments.callee):this.stack=new Error(e).stack}var o=e("./util").unansi;n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.name="AssError",n.prototype.filterStackTrace=function(e){return e.filter(function(e){return!/AssError|assert/.test(e.getFunctionName())})},n.prototype.toJSON=function(e){var t={name:this.name,message:o(this.message),actual:this.actual,expected:this.expected,showDiff:this.showDiff};return!1!==e&&this.stack&&(t.stack=this.stack),t},t.exports=n},{"./util":7}],5:[function(e,t){(function(n){function o(e,t){this.matcher=e,this.fail=e.fail,this.args=t||[],this.expected=t[0],this.actual=void 0}var a="undefined"!=typeof window?window._:"undefined"!=typeof n?n._:null,r=e("./chain"),i=e("./util").template;o.prototype=Object.create(null),o.prototype.constructor=o,Object.defineProperty(o.prototype,"help",{get:function(){return this.matcher.help}}),o.prototype.equals=function(e,t){return a.isEqual(e,t,function(e,n){return n instanceof r?t.test(e):a.isEqual(e,n)})},o.prototype.mutate=function(e){return function(t){return t(e)}},o.prototype.resolve=function(e){this.fail=this.matcher.fail,this.actual=e,this.args.unshift(e);try{var t=this.matcher.test.apply(this,this.args);return"string"==typeof t&&(this.fail=t,t=!1),t}finally{this.args.shift()}},o.prototype.getDescription=function(){return this.matcher.desc?i(this.matcher.desc,this):null},o.prototype.getMismatch=function(){return i(this.fail,this)},o.prototype.toString=function(){return this.getDescription()},t.exports=o}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./chain":2,"./util":7}],6:[function(e,t){function n(e,t){"function"==typeof t&&(t={test:t}),this.name=e,this.help=Array.isArray(t.help)?t.help.join("\n"):t.help||"Not available",this.desc=void 0!==t.desc?t.desc:this.name,this.fail=t.fail||"was ${ actual }",this.test=t.test||function(){return!1},this.arity=void 0!==t.arity?t.arity:this.test.length}var o=e("./expectation");n.prototype=Object.create(null),n.prototype.constructor=n,n.prototype.clone=function(){return new this.constructor(this.name,{help:this.help,desc:this.desc,fail:this.fail,test:this.test})},n.prototype.expectation=function(){var e=Array.prototype.slice.call(arguments);return new o(this,e)},n.prototype.toString=function(){return"<Ass.Matcher "+this.name+">"},t.exports=n},{"./expectation":5}],7:[function(e,t,n){(function(e){function t(e){var t;return t=r.isNumber(e)||r.isNaN(e)||r.isBoolean(e)||r.isNull(e)||r.isUndefined(e)?"<"+e+">":JSON.stringify(e),"[1;36m"+t+"[0;39m"}function o(e,n){var o=r.escape;try{return r.escape=t,i(e)(n)}finally{r.escape=o}}function a(e){return e.replace(/\x1b\[(\d+;?)+[a-z]/gi,"")}var r="undefined"!=typeof window?window._:"undefined"!=typeof e?e._:null,i=r.memoize(function(e){return r.template(e,null,{escape:/\{\{([\s\S]+?)\}\}/g})});n.template=o,n.unansi=a}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],8:[function(e,t){e("./lib/core-matchers"),t.exports=e("./lib/ass.js")},{"./lib/ass.js":1,"./lib/core-matchers":3}]},{},[8])(8)});